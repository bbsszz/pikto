//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("piktoModel", "FK_piktogramy_1_0", "category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Pikto.Database.category), "piktogramy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Pikto.Database.piktogramy), true)]
[assembly: EdmRelationshipAttribute("piktoModel", "FK_cluster_bt_0_0", "piktogramy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Pikto.Database.piktogramy), "cluster_bt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Pikto.Database.cluster_bt), true)]
[assembly: EdmRelationshipAttribute("piktoModel", "FK_cluster_tb_0_0", "piktogramy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Pikto.Database.piktogramy), "cluster_tb", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Pikto.Database.cluster_tb), true)]
[assembly: EdmRelationshipAttribute("piktoModel", "FK_media_0_0", "media_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Pikto.Database.media_type), "medium", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Pikto.Database.medium), true)]
[assembly: EdmRelationshipAttribute("piktoModel", "FK_piktogramy_0_0", "medium", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Pikto.Database.medium), "piktogramy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Pikto.Database.piktogramy), true)]

#endregion

namespace Pikto.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class piktoDB : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new piktoDB object using the connection string found in the 'piktoDB' section of the application configuration file.
        /// </summary>
        public piktoDB() : base("name=piktoDB", "piktoDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new piktoDB object.
        /// </summary>
        public piktoDB(string connectionString) : base(connectionString, "piktoDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new piktoDB object.
        /// </summary>
        public piktoDB(EntityConnection connection) : base(connection, "piktoDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<category> categories
        {
            get
            {
                if ((_categories == null))
                {
                    _categories = base.CreateObjectSet<category>("categories");
                }
                return _categories;
            }
        }
        private ObjectSet<category> _categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<cluster_bt> cluster_bt
        {
            get
            {
                if ((_cluster_bt == null))
                {
                    _cluster_bt = base.CreateObjectSet<cluster_bt>("cluster_bt");
                }
                return _cluster_bt;
            }
        }
        private ObjectSet<cluster_bt> _cluster_bt;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<cluster_tb> cluster_tb
        {
            get
            {
                if ((_cluster_tb == null))
                {
                    _cluster_tb = base.CreateObjectSet<cluster_tb>("cluster_tb");
                }
                return _cluster_tb;
            }
        }
        private ObjectSet<cluster_tb> _cluster_tb;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<map> maps
        {
            get
            {
                if ((_maps == null))
                {
                    _maps = base.CreateObjectSet<map>("maps");
                }
                return _maps;
            }
        }
        private ObjectSet<map> _maps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<medium> media
        {
            get
            {
                if ((_media == null))
                {
                    _media = base.CreateObjectSet<medium>("media");
                }
                return _media;
            }
        }
        private ObjectSet<medium> _media;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<media_type> media_type
        {
            get
            {
                if ((_media_type == null))
                {
                    _media_type = base.CreateObjectSet<media_type>("media_type");
                }
                return _media_type;
            }
        }
        private ObjectSet<media_type> _media_type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<piktogramy> piktogramies
        {
            get
            {
                if ((_piktogramies == null))
                {
                    _piktogramies = base.CreateObjectSet<piktogramy>("piktogramies");
                }
                return _piktogramies;
            }
        }
        private ObjectSet<piktogramy> _piktogramies;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocategories(category category)
        {
            base.AddObject("categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cluster_bt EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocluster_bt(cluster_bt cluster_bt)
        {
            base.AddObject("cluster_bt", cluster_bt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cluster_tb EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocluster_tb(cluster_tb cluster_tb)
        {
            base.AddObject("cluster_tb", cluster_tb);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the maps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomaps(map map)
        {
            base.AddObject("maps", map);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the media EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomedia(medium medium)
        {
            base.AddObject("media", medium);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the media_type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomedia_type(media_type media_type)
        {
            base.AddObject("media_type", media_type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the piktogramies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopiktogramies(piktogramy piktogramy)
        {
            base.AddObject("piktogramies", piktogramy);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="piktoModel", Name="category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new category object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static category Createcategory(global::System.Int64 id)
        {
            category category = new category();
            category.id = id;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_piktogramy_1_0", "piktogramy")]
        public EntityCollection<piktogramy> piktogramies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<piktogramy>("piktoModel.FK_piktogramy_1_0", "piktogramy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<piktogramy>("piktoModel.FK_piktogramy_1_0", "piktogramy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="piktoModel", Name="cluster_bt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cluster_bt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new cluster_bt object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static cluster_bt Createcluster_bt(global::System.Int64 id)
        {
            cluster_bt cluster_bt = new cluster_bt();
            cluster_bt.id = id;
            return cluster_bt;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> @class
        {
            get
            {
                return _class;
            }
            set
            {
                OnclassChanging(value);
                ReportPropertyChanging("class");
                _class = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("class");
                OnclassChanged();
            }
        }
        private Nullable<global::System.Int64> _class;
        partial void OnclassChanging(Nullable<global::System.Int64> value);
        partial void OnclassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private Nullable<global::System.Double> _weight;
        partial void OnweightChanging(Nullable<global::System.Double> value);
        partial void OnweightChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_cluster_bt_0_0", "piktogramy")]
        public piktogramy piktogramy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piktogramy>("piktoModel.FK_cluster_bt_0_0", "piktogramy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piktogramy>("piktoModel.FK_cluster_bt_0_0", "piktogramy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piktogramy> piktogramyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piktogramy>("piktoModel.FK_cluster_bt_0_0", "piktogramy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piktogramy>("piktoModel.FK_cluster_bt_0_0", "piktogramy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="piktoModel", Name="cluster_tb")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cluster_tb : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new cluster_tb object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static cluster_tb Createcluster_tb(global::System.Int64 id)
        {
            cluster_tb cluster_tb = new cluster_tb();
            cluster_tb.id = id;
            return cluster_tb;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> @class
        {
            get
            {
                return _class;
            }
            set
            {
                OnclassChanging(value);
                ReportPropertyChanging("class");
                _class = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("class");
                OnclassChanged();
            }
        }
        private Nullable<global::System.Int64> _class;
        partial void OnclassChanging(Nullable<global::System.Int64> value);
        partial void OnclassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private Nullable<global::System.Boolean> _weight;
        partial void OnweightChanging(Nullable<global::System.Boolean> value);
        partial void OnweightChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_cluster_tb_0_0", "piktogramy")]
        public piktogramy piktogramy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piktogramy>("piktoModel.FK_cluster_tb_0_0", "piktogramy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piktogramy>("piktoModel.FK_cluster_tb_0_0", "piktogramy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piktogramy> piktogramyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piktogramy>("piktoModel.FK_cluster_tb_0_0", "piktogramy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piktogramy>("piktoModel.FK_cluster_tb_0_0", "piktogramy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="piktoModel", Name="map")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class map : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new map object.
        /// </summary>
        /// <param name="old">Initial value of the old property.</param>
        /// <param name="new">Initial value of the new property.</param>
        public static map Createmap(global::System.Int64 old, global::System.Int64 @new)
        {
            map map = new map();
            map.old = old;
            map.@new = @new;
            return map;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 old
        {
            get
            {
                return _old;
            }
            set
            {
                if (_old != value)
                {
                    OnoldChanging(value);
                    ReportPropertyChanging("old");
                    _old = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("old");
                    OnoldChanged();
                }
            }
        }
        private global::System.Int64 _old;
        partial void OnoldChanging(global::System.Int64 value);
        partial void OnoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 @new
        {
            get
            {
                return _new;
            }
            set
            {
                if (_new != value)
                {
                    OnnewChanging(value);
                    ReportPropertyChanging("new");
                    _new = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("new");
                    OnnewChanged();
                }
            }
        }
        private global::System.Int64 _new;
        partial void OnnewChanging(global::System.Int64 value);
        partial void OnnewChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="piktoModel", Name="media_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class media_type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new media_type object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static media_type Createmedia_type(global::System.Int64 id)
        {
            media_type media_type = new media_type();
            media_type.id = id;
            return media_type;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_media_0_0", "medium")]
        public EntityCollection<medium> media
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<medium>("piktoModel.FK_media_0_0", "medium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<medium>("piktoModel.FK_media_0_0", "medium", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="piktoModel", Name="medium")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class medium : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new medium object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="media_type_id">Initial value of the media_type_id property.</param>
        /// <param name="object">Initial value of the object property.</param>
        public static medium Createmedium(global::System.Int64 id, global::System.Int64 media_type_id, global::System.Byte[] @object)
        {
            medium medium = new medium();
            medium.id = id;
            medium.media_type_id = media_type_id;
            medium.@object = @object;
            return medium;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 media_type_id
        {
            get
            {
                return _media_type_id;
            }
            set
            {
                Onmedia_type_idChanging(value);
                ReportPropertyChanging("media_type_id");
                _media_type_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("media_type_id");
                Onmedia_type_idChanged();
            }
        }
        private global::System.Int64 _media_type_id;
        partial void Onmedia_type_idChanging(global::System.Int64 value);
        partial void Onmedia_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] @object
        {
            get
            {
                return StructuralObject.GetValidValue(_object);
            }
            set
            {
                OnobjectChanging(value);
                ReportPropertyChanging("object");
                _object = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("object");
                OnobjectChanged();
            }
        }
        private global::System.Byte[] _object;
        partial void OnobjectChanging(global::System.Byte[] value);
        partial void OnobjectChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_media_0_0", "media_type")]
        public media_type media_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<media_type>("piktoModel.FK_media_0_0", "media_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<media_type>("piktoModel.FK_media_0_0", "media_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<media_type> media_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<media_type>("piktoModel.FK_media_0_0", "media_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<media_type>("piktoModel.FK_media_0_0", "media_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_piktogramy_0_0", "piktogramy")]
        public EntityCollection<piktogramy> piktogramies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<piktogramy>("piktoModel.FK_piktogramy_0_0", "piktogramy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<piktogramy>("piktoModel.FK_piktogramy_0_0", "piktogramy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="piktoModel", Name="piktogramy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class piktogramy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new piktogramy object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static piktogramy Createpiktogramy(global::System.Int64 id)
        {
            piktogramy piktogramy = new piktogramy();
            piktogramy.id = id;
            return piktogramy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> category_id
        {
            get
            {
                return _category_id;
            }
            set
            {
                Oncategory_idChanging(value);
                ReportPropertyChanging("category_id");
                _category_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("category_id");
                Oncategory_idChanged();
            }
        }
        private Nullable<global::System.Int64> _category_id;
        partial void Oncategory_idChanging(Nullable<global::System.Int64> value);
        partial void Oncategory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> media_id
        {
            get
            {
                return _media_id;
            }
            set
            {
                Onmedia_idChanging(value);
                ReportPropertyChanging("media_id");
                _media_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("media_id");
                Onmedia_idChanged();
            }
        }
        private Nullable<global::System.Int64> _media_id;
        partial void Onmedia_idChanging(Nullable<global::System.Int64> value);
        partial void Onmedia_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] image
        {
            get
            {
                return StructuralObject.GetValidValue(_image);
            }
            set
            {
                OnimageChanging(value);
                ReportPropertyChanging("image");
                _image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("image");
                OnimageChanged();
            }
        }
        private global::System.Byte[] _image;
        partial void OnimageChanging(global::System.Byte[] value);
        partial void OnimageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_piktogramy_1_0", "category")]
        public category category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("piktoModel.FK_piktogramy_1_0", "category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("piktoModel.FK_piktogramy_1_0", "category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<category> categoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("piktoModel.FK_piktogramy_1_0", "category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<category>("piktoModel.FK_piktogramy_1_0", "category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_cluster_bt_0_0", "cluster_bt")]
        public EntityCollection<cluster_bt> cluster_bt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cluster_bt>("piktoModel.FK_cluster_bt_0_0", "cluster_bt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cluster_bt>("piktoModel.FK_cluster_bt_0_0", "cluster_bt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_cluster_tb_0_0", "cluster_tb")]
        public EntityCollection<cluster_tb> cluster_tb
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cluster_tb>("piktoModel.FK_cluster_tb_0_0", "cluster_tb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cluster_tb>("piktoModel.FK_cluster_tb_0_0", "cluster_tb", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("piktoModel", "FK_piktogramy_0_0", "medium")]
        public medium medium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medium>("piktoModel.FK_piktogramy_0_0", "medium").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medium>("piktoModel.FK_piktogramy_0_0", "medium").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<medium> mediumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medium>("piktoModel.FK_piktogramy_0_0", "medium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<medium>("piktoModel.FK_piktogramy_0_0", "medium", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
